# .bashrc
# vim:sts=4 sw=4 et
# Bash shell per-invocation initialisation
# Copyright 2015-2018 Andrew Bettison

# If not running interactively, don't do anything
case $- in *i*);; *) return;; esac

# Test if shellboost is installed in some well-known places, if we don't
# already know.

if [ ! -f "$SHELLBOOST/libsh/include.sh" -a -r "$HOME/etc/shellboost/libsh/include.sh" ]; then
   export SHELLBOOST="$HOME/etc/shellboost"
fi
if [ -f "$SHELLBOOST/libsh/include.sh" ]; then
   . "$SHELLBOOST/libsh/include.sh"
else
    echo "Warning: missing \$SHELLBOOST directory: $SHELLBOOST" >&2
fi

# Source global definitions

if [ -f /etc/bash.bashrc ]; then
    source /etc/bash.bashrc
fi

# If our PATH has been clobbered (probably by su), correct it if we can.

case "$PATH" in
*:"$HOME/bin":* | "$HOME/bin":* | *:"$HOME/bin") ;;
*) [ -f "$HOME/.setpath" ] && source "$HOME/.setpath";;
esac

# Bash prompt.

if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

color_prompt=false
case "$TERM" in
xterm-*color) color_prompt=true;;
esac

# uncomment for a colored prompt if the terminal has the capability
force_color_prompt=false
if $force_color_prompt; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
        # We have color support; assume it's compliant with Ecma-48
        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
        # a case would tend to support setf rather than setaf.)
        color_prompt=true
    else
        color_prompt=false
    fi
fi

if $color_prompt; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\] \$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w \$ '
fi

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

unset color_prompt force_color_prompt

# Command-line editing mode.

set -o emacs
set +o vi

# Shell behaviour preferences.

set -o notify
set -o noclobber
set +o nounset
set +o ignoreeof
shopt -s histappend
shopt -s checkwinsize
shopt -s globasciiranges 2>/dev/null
shopt -s globstar 2>/dev/null

# Colour support.

if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    LS_OPTIONS="--color=auto"
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Convenient command aliases.

unalias ls 2>/dev/null
if lspath=$(type -p ls); then
    alias ls="$lspath \$LS_OPTIONS"
    alias l="$lspath \$LS_OPTIONS -C"
    alias ll="$lspath \$LS_OPTIONS -lH"
fi
unset lspath

# Development profile (only in Bash).

__shellboost_include libsh/devprofile.bash

p() {
    case $# in
    0)
        echo_current_devprofile
        ;;
    1)
        if ! set_current_devprofile "$1"; then
            echo "Not a devprofile: $1" >&2
            return 1
        fi
        ;;
    *)
        run_in_devprofile "$@"
        ;;
    esac
}

complete -F complete_devprofiles p

# Mail reading completion

complete -C mh-folder-names mail save scan rmf mhsort
