# .bashrc
# vim:sts=4 sw=4 et
# Bash shell per-invocation initialisation
# Copyright 2015-2016 Andrew Bettison

# Test if shellboost is installed in some well-known places, if we don't
# already know.

if [ ! -f "$SHELLBOOST/libsh/include.sh" -a -r "$HOME/etc/shellboost/libsh/include.sh" ]; then
   export SHELLBOOST="$HOME/etc/shellboost"
   . "$SHELLBOOST/libsh/include.sh"
fi

# Source global definitions

if [ -f /etc/bash.bashrc ]; then
    source /etc/bash.bashrc
fi

# If our PATH has been clobbered (probably by su), correct it if we can.

case "$PATH" in
*:"$HOME/bin":* | "$HOME/bin":* | *:"$HOME/bin") ;;
*) [ -f "$HOME/.setpath" ] && source "$HOME/.setpath";;
esac

# Prompts.

PS1='\h:\w'
case $TERM in
xterm*)
    PS1="$PS1"'\[\033]2;\h \w\007\]'
    ;;
esac
if [ -w / ]; then
    PS1="$PS1 # "
else
    PS1="$PS1 \$ "
fi
PS2='> '
export PS1 PS2

# Command-line editing mode.

set -o emacs
set +o vi

# Shell behaviour preferences.

set -o notify
set -o noclobber
set +o nounset
set +o ignoreeof

# Quick-type commands.

lspath=$(which ls)
alias ls="$lspath \$LS_OPTIONS"
alias l="$lspath \$LS_OPTIONS -C"
alias ll="$lspath \$LS_OPTIONS -lH"
unset lspath

# Useful development functions.

alias grep='grep --color=auto'

# Preferred editors.

if [ "$(type -t gvim)" = file ]; then
    alias vi=gvim
    alias vidiff=gvimdiff
elif [ "$(type -t vim)" = file ]; then
    alias vi=vim
    alias vidiff=vimdiff
else
    echo "Warning: gvim and vim not available."
fi

# Development profile (only in Bash).

__shellboost_include libsh/devprofile.bash

p() {
    case $# in
    0)
        echo_current_devprofile
        ;;
    1)
        if ! set_current_devprofile "$1"; then
            echo "Not a devprofile: $1" >&2
            return 1
        fi
        ;;
    *)
        run_in_devprofile "$@"
        ;;
    esac
}

complete -F complete_devprofiles p

# Mail reading completion

complete -C mh-folder-names mail save scan rmf
