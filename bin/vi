#!/bin/bash
# vim:sts=4 sw=4 et
# Copyright 2018 Andrew Bettison

# vi(1) wrapper that invokes a preferred vi-like editor:
# - nvim-qt(1) if present and $DISPLAY is set, otherwise
# - gvim(1) if present and $DISPLAY is set, otherwise
# - nvim(1) if present, otherwise
# - vim(1) if present, otherwise
# - vi(1) if present
#
# If invoked via an executable name (symlink) that contains "nofork", then
# passes the --nofork option if supported by the selected editor.

# Bootstrap shellboost.
if [ ! -f "$SHELLBOOST/libsh/include.sh" -a -r "${0%/bin/*}/libsh/include.sh" ]; then
   export SHELLBOOST="${0%/bin/*}"
fi
. "$SHELLBOOST/libsh/include.sh" || exit $?
__shellboost_include libsh/searchpath.sh || exit $?

nofork_opt=
case $0 in
*nofork*) nofork_opt=--nofork;;
esac

found=

if [ -n "$DISPLAY" ]; then
    if found=$(searchpath_find "$PATH" nvim-qt executable_not_self); then
       exec "$found" $nofork_opt -- "$@"
       echo "cannot execute $found" >&2
    fi
    if found=$(searchpath_find "$PATH" gvim executable_not_self); then
       exec "$found" $nofork_opt "$@"
       echo "cannot execute $found" >&2
    fi
fi

if found=$(searchpath_find "$PATH" nvim executable_not_self); then
   exec "$found" $nofork_opt "$@"
   echo "cannot execute $found" >&2
fi

if found=$(searchpath_find "$PATH" vim executable_not_self); then
   exec "$found" $nofork_opt "$@"
   echo "cannot execute $found" >&2
fi

if found=$(searchpath_find "$PATH" vi executable_not_self); then
    if [ -n "$nofork_opt" ] && ! "$found" --help 2>&1 | grep -q -e "$nofork_opt"; then
        nofork_opt=
    fi
    exec "$found" $nofork_opt "$@"
    echo "cannot execute $found, giving up" >&2
    exit 1
fi

[ -n "$found" ] || echo "not found: nvim-qt or gvim or nvim or vim or vi" >&2
exit 1
